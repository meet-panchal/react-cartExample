{"version":3,"sources":["components/QantityChecker.jsx","components/CartTotal.jsx","data.js","shopTable/DisplayTable.jsx","App.js","serviceWorker.js","index.js"],"names":["QantityChecker","props","className","scope","data","map","category","foodItem","key","id","name","description","price","quantity","icon","faPlusCircle","onClick","increment","faMinusCircle","decrement","color","faTimes","reset","CartTotal","grandTotal","forEach","item","checkedItem","menu","isImage","iCnt","items","nonVeg","icon_id","isSpecial","topping_id","type","liked","likes","DisplayTable","state","parentMenu","clickedItem","setState","updatedState","slice","ele","innerEle","updateState","incart","_","itemsInCart","push","this","length","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cabcb24c.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlusCircle,\n  faMinusCircle,\n  faTimes\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst QantityChecker = props => {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-info\">\n        <thead>\n          <tr className=\"center\">\n            <th scope=\"col\">Product</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Quantity</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map(category =>\n            category.map(foodItem => (\n              <tr key={foodItem.id}>\n                <th scope=\"row\">\n                  <p>{foodItem.name}</p>\n                  <small className=\"mt-0\">{foodItem.description}</small>\n                </th>\n                <td className=\"center\">${foodItem.price}</td>\n                <td className=\"center\">{foodItem.quantity}</td>\n                <td className=\"center\">\n                  <FontAwesomeIcon\n                    className=\"mr-3\"\n                    icon={faPlusCircle}\n                    onClick={() => props.increment(foodItem)}\n                  />\n                  <FontAwesomeIcon\n                    className=\"mx-3\"\n                    icon={faMinusCircle}\n                    onClick={() => props.decrement(foodItem)}\n                    color={foodItem.quantity === 0 ? \"gray\" : \"black\"}\n                  />\n                  <FontAwesomeIcon\n                    className=\"ml-3\"\n                    icon={faTimes}\n                    onClick={() => props.reset(foodItem)}\n                    color={foodItem.quantity > 0 ? \"red\" : \"black\"}\n                  />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QantityChecker;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../components/CartTotal.css\";\n\nconst CartTotal = props => {\n  let grandTotal = 0;\n  props.data.forEach(item => {\n    grandTotal += item.quantity * item.price;\n  });\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-primary\">\n        <thead>\n          <tr className=\"center\">\n            <th scope=\"col\">Product</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Quantity</th>\n            <th scope=\"col\">Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map(checkedItem => (\n            <tr key={checkedItem.id}>\n              <th scope=\"row\">{checkedItem.name}</th>\n              <td className=\"center\">${checkedItem.price}</td>\n              <td className=\"center\">\n                <FontAwesomeIcon\n                  className=\"mr-3\"\n                  icon={faMinusCircle}\n                  onClick={() => props.decrement(checkedItem)}\n                />\n                {checkedItem.quantity}\n\n                <FontAwesomeIcon\n                  className=\"ml-3\"\n                  icon={faPlusCircle}\n                  onClick={() => props.increment(checkedItem)}\n                />\n              </td>\n              <td className=\"center\">\n                ${checkedItem.price * checkedItem.quantity}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {grandTotal > 0 ? <h1>Grand Total : {grandTotal}</h1> : null}\n    </div>\n  );\n};\n\nexport default CartTotal;\n","const data = {\n  menu: [\n    {\n      id: 1,\n      name: \"Salads\",\n      description: \"\",\n      isImage: 4,\n      iCnt: 3,\n      items: [\n        {\n          id: 1,\n          name: \"Green Salad\",\n          description: \"Freshly cut vegetables\",\n          price: 10,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 7\n        },\n        {\n          id: 2,\n          name: \"Brinjol cottage cheese salad\",\n          description: \"Deep fried brinjol and cottage cheese\",\n          price: 15,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 6\n        },\n        {\n          id: 3,\n          name: \"Chicken Tikka Salad\",\n          description: \"Chicken Tikka Salad made from fresh chicken\",\n          price: 15,\n          nonVeg: \"No\",\n          icon_id: '[\"1\"]',\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 5\n        }\n      ]\n    },\n\n    {\n      id: 2,\n      name: \"Soups\",\n      description: \"\",\n      isImage: 3,\n      iCnt: 5,\n      items: [\n        {\n          id: 4,\n          name: \"Dal soup\",\n          description: \"Freshly boiled Indian lentils with mix vegetables\",\n          price: 12,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 11\n        },\n        {\n          id: 5,\n          name: \"Tomato Soup\",\n          description: \"Tomato soup\",\n          price: 12,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 4\n        },\n        {\n          id: 6,\n          name: \"Mushroom Palak Soup\",\n          description: \"Freshly cooked mushroom and spinach soup\",\n          price: 14,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 3\n        },\n        {\n          id: 7,\n          name: \"Chicken Soup\",\n          description: \"Chicken soup with Indian herbs\",\n          price: 14,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 4\n        },\n        {\n          id: 8,\n          name: \"Mutton Soup\",\n          description: \"Mutton soup with Indian herbs\",\n          price: 16,\n          nonVeg: \"No\",\n          icon_id: \"\",\n          isSpecial: \"No\",\n          topping_id: \"\",\n          isImage: 0,\n          type: \"i\",\n          liked: 0,\n          likes: 3\n        }\n      ]\n    }\n  ]\n};\nexport default data;\n","import React, { Component } from \"react\";\nimport QantityChecker from \"../components/QantityChecker\";\nimport CartTotal from \"../components/CartTotal\";\nimport parentMenu from \"../data\";\nimport \"./DisplayTable.css\";\n\nexport class DisplayTable extends Component {\n  state = {\n    menu: parentMenu.menu.map(category =>\n      category.items.map(foodItem => ({ ...foodItem, quantity: 0 }))\n    )\n  };\n\n  increment = clickedItem => {\n    const updateState = () => {\n      let updatedState = this.state.menu.slice();\n      updatedState.forEach(ele =>\n        ele.forEach(innerEle => {\n          if (innerEle.id === clickedItem.id) {\n            innerEle.quantity += 1;\n          }\n        })\n      );\n      return updatedState;\n    };\n    this.setState({\n      menu: updateState()\n    });\n  };\n\n  decrement = clickedItem => {\n    const updateState = () => {\n      let updatedState = this.state.menu.slice();\n      updatedState.forEach(ele =>\n        ele.forEach(innerEle => {\n          if (innerEle.id === clickedItem.id && innerEle.quantity > 0) {\n            innerEle.quantity -= 1;\n          }\n        })\n      );\n      return updatedState;\n    };\n    this.setState({\n      menu: updateState()\n    });\n  };\n\n  reset = clickedItem => {\n    const updateState = () => {\n      let updatedState = this.state.menu.slice();\n      updatedState.forEach(ele =>\n        ele.forEach(innerEle => {\n          if (innerEle.id === clickedItem.id) {\n            innerEle.quantity = 0;\n          }\n        })\n      );\n      return updatedState;\n    };\n    this.setState({\n      menu: updateState()\n    });\n  };\n\n  incart = _ => {\n    let itemsInCart = [];\n    let updatedState = this.state.menu.slice();\n    updatedState.forEach(ele =>\n      ele.forEach(innerEle => {\n        if (innerEle.quantity > 0) {\n          itemsInCart.push(innerEle);\n        }\n      })\n    );\n    return itemsInCart;\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h1 className=\"navbar navbar-light bg-warning sticky-top\">\n              Add to cart\n            </h1>\n          </div>\n          <div className=\"col-md-6\">\n            <h2>Menu</h2>\n            <QantityChecker\n              data={this.state.menu}\n              increment={this.increment}\n              decrement={this.decrement}\n              reset={this.reset}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <h2>Your Cart</h2>\n            {this.incart().length > 0 ? (\n              <CartTotal\n                data={this.incart()}\n                increment={this.increment}\n                decrement={this.decrement}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DisplayTable;\n","import React from \"react\";\nimport DisplayTable from \"./shopTable/DisplayTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DisplayTable />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}